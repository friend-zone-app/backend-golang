// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package customTypes

import (
	"time"
)

// Address
type Address struct {
	AddressLine       string        `json:"addressLine" bson:"addressLine"`
	AdminDistrict     string        `json:"adminDistrict" bson:"adminDistrict"`
	AdminDistrict2    string        `json:"adminDistrict2" bson:"adminDistrict2"`
	CountryRegion     string        `json:"countryRegion" bson:"countryRegion"`
	FormattedAddress  string        `json:"formattedAddress" bson:"formattedAddress"`
	Intersection      *Interception `json:"intersection" bson:"intersection"`
	Locality          string        `json:"locality" bson:"locality"`
	PostalCode        string        `json:"postalCode" bson:"postalCode"`
	CountryRegionIso2 string        `json:"countryRegionIso2" bson:"countryRegionIso2"`
}

type CreateDateInput struct {
	Title     string   `json:"title" bson:"title"`
	Time      float64  `json:"time" bson:"time"`
	Inviters  []string `json:"inviters,omitempty" bson:"inviters"`
	Cancelled *bool    `json:"cancelled,omitempty" bson:"cancelled"`
	ExpireIn  *float64 `json:"expireIn,omitempty" bson:"expireIn"`
	Location  string   `json:"location" bson:"location"`
}

type CreateUserArgs struct {
	Username string `json:"username" bson:"username"`
	Password string `json:"password" bson:"password"`
	Email    string `json:"email" bson:"email"`
}

// date
type Event struct {
	ID        string    `json:"_id" bson:"_id"`
	Author    string    `json:"author" bson:"author"`
	Title     string    `json:"title" bson:"title"`
	Location  string    `json:"location" bson:"location"`
	Time      float64   `json:"time" bson:"time"`
	CreatedAt time.Time `json:"createdAt" bson:"createdAt"`
	Inviters  []string  `json:"inviters,omitempty" bson:"inviters"`
	Cancelled bool      `json:"cancelled" bson:"cancelled"`
	ExpireIn  float64   `json:"expireIn" bson:"expireIn"`
}

// Geocodepoint
type GeocodePoint struct {
	Type              string    `json:"type" bson:"type"`
	Coordinates       []float64 `json:"coordinates" bson:"coordinates"`
	CalculationMethod string    `json:"calculationMethod" bson:"calculationMethod"`
	UsageTypes        []string  `json:"usageTypes" bson:"usageTypes"`
}

// Interception
type Interception struct {
	BaseStreet       string `json:"baseStreet" bson:"baseStreet"`
	SecondaryStreet1 string `json:"secondaryStreet1" bson:"secondaryStreet1"`
	IntersectionType string `json:"intersectionType" bson:"intersectionType"`
	DisplayName      string `json:"displayName" bson:"displayName"`
}

// Location
type Location struct {
	Bbox         []float64     `json:"bbox" bson:"bbox"`
	Name         string        `json:"name" bson:"name"`
	Point        *Point        `json:"point" bson:"point"`
	Address      *Address      `json:"address" bson:"address"`
	Confidence   string        `json:"confidence" bson:"confidence"`
	EntityType   string        `json:"entityType" bson:"entityType"`
	GeocodePoint *GeocodePoint `json:"geocodePoint" bson:"geocodePoint"`
	MatchCodes   []string      `json:"matchCodes" bson:"matchCodes"`
}

// Point
type Point struct {
	Type        string    `json:"type" bson:"type"`
	Coordinates []float64 `json:"coordinates" bson:"coordinates"`
}

type RemoveDateInput struct {
	Username string `json:"username" bson:"username"`
	ID       string `json:"id" bson:"_id"`
}

// sensoredUser
type SensoredUser struct {
	ID          string   `json:"_id" bson:"_id"`
	DisplayName string   `json:"displayName" bson:"displayName"`
	Username    string   `json:"username" bson:"username"`
	Email       string   `json:"email" bson:"email"`
	Biography   *string  `json:"biography,omitempty" bson:"biography"`
	Avatar      *string  `json:"avatar,omitempty" bson:"avatar"`
	Events      []string `json:"events" bson:"events"`
}

// Tokens
type Tokens struct {
	AccessToken  string `json:"accessToken" bson:"accessToken"`
	RefreshToken string `json:"refreshToken" bson:"refreshToken"`
}

type UpdateDateInput struct {
	Query     string   `json:"query" bson:"query"`
	Author    *string  `json:"author,omitempty" bson:"author"`
	Title     *string  `json:"title,omitempty" bson:"title"`
	Time      *float64 `json:"time,omitempty" bson:"time"`
	Inviters  []string `json:"inviters,omitempty" bson:"inviters"`
	Cancelled *bool    `json:"cancelled,omitempty" bson:"cancelled"`
	ExpireIn  *float64 `json:"expireIn,omitempty" bson:"expireIn"`
}

type UpdateUserArgs struct {
	Query        string  `json:"query" bson:"query"`
	Username     *string `json:"username,omitempty" bson:"username"`
	Password     *string `json:"password,omitempty" bson:"password"`
	Email        *string `json:"email,omitempty" bson:"email"`
	Biography    *string `json:"biography,omitempty" bson:"biography"`
	Avatar       *string `json:"avatar,omitempty" bson:"avatar"`
	Salt         *string `json:"salt,omitempty" bson:"salt"`
	RefreshToken *string `json:"refreshToken,omitempty" bson:"refreshToken"`
}

// user
type User struct {
	ID           string    `json:"_id" bson:"_id"`
	DisplayName  string    `json:"displayName" bson:"displayName"`
	Username     string    `json:"username" bson:"username"`
	Password     string    `json:"password" bson:"password"`
	Email        string    `json:"email" bson:"email"`
	Biography    *string   `json:"biography,omitempty" bson:"biography"`
	Avatar       *string   `json:"avatar,omitempty" bson:"avatar"`
	CreatedAt    time.Time `json:"createdAt" bson:"createdAt"`
	Salt         string    `json:"salt" bson:"salt"`
	RefreshToken string    `json:"refreshToken" bson:"refreshToken"`
	Events       []string  `json:"events" bson:"events"`
}

type UserRes struct {
	User  *User   `json:"user" bson:"user"`
	Token *Tokens `json:"token" bson:"token"`
}
